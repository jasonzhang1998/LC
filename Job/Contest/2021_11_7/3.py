# 分配给商店的最多商品的最小值

from typing import List


class Solution:
    # 暴力模拟
    def minimizedMaximum(self, n: int, quantities: List[int]) -> int:
        m = len(quantities)
        num = n - m
        dp = [1] * m
        tmp = quantities[:]
        while num > 0:
            index = tmp.index(max(tmp))
            dp[index] += 1
            tmp[index] = quantities[index] / dp[index]
            num -= 1
        print(dp)
        for i in range(m):
            quantities[i] /= dp[i]
        ans = max(quantities)
        if ans == int(ans):
            return int(ans)
        else:
            return int(ans) + 1

    # 二分搜索，找出每个商店最大商品数的最小值
    def minimizedMaximum2(self, n: int, quantities: List[int]) -> int:
        # 判断该商品数是否满足条件
        def valid(k):
            cnt = 0
            for num in quantities:
                if num % k == 0:
                    cnt += num // k
                else:
                    cnt += num // k + 1

                if cnt > n:
                    return False
            return True

        left, right = 1, max(quantities)
        ans = 1
        # 二分搜索找出满足条件的最小值
        while left <= right:
            mid = left + (right - left) // 2
            if valid(mid):
                ans = mid
                right = mid - 1
            else:
                left = mid + 1
        return ans


if __name__ == '__main__':
    quantities = [895, 26826, 85060, 642, 545, 791, 856, 994, 125, 207, 451, 872, 768, 330, 531, 904, 479, 61409, 106,
                  77199, 863, 15613,
                  174, 465, 762, 22583, 389, 313, 880, 577, 537, 16602, 110, 159, 22356, 762, 82678, 408, 668, 995, 626,
                  896, 949, 65098,
                  49467, 49154, 70079, 59500, 20214, 757, 77142, 79933, 20803, 367, 938, 26972, 992, 745, 13760, 22526,
                  302, 919, 275,
                  297, 864, 914, 882, 16083, 40, 638, 402, 60762, 749, 222, 995, 70064, 16952, 454, 154, 908, 13, 795,
                  85942, 17946, 779,
                  26453, 94365, 991, 87507, 531, 406, 130, 85432, 17, 397, 915, 93656, 268, 937, 747, 78, 718, 270, 333,
                  362, 761, 23011,
                  889, 317, 245, 13251, 555, 89172, 29771, 58, 141, 423, 93157, 74771, 346, 746, 532, 36307, 71229,
                  75528, 30011, 522,
                  750, 74974, 352, 44164, 72045, 90100, 86785, 284, 149, 108, 401, 736, 415, 512, 66, 723, 61, 267, 872,
                  88795, 587,
                  40728, 888, 89593, 522, 171, 385, 118, 140, 453, 379, 794, 851, 43184, 51100, 34527, 330, 331, 7, 307,
                  969, 97585,
                  88575, 918, 558, 50076, 90039, 80771, 246, 89846, 64399, 462, 833, 35234, 320, 83, 709, 12435, 25,
                  236, 646, 452, 612,
                  766, 112, 489, 151, 54534, 73914, 279, 96668, 172, 86073, 722, 66144, 975, 214, 392, 682, 522, 520,
                  476, 392, 456,
                  41358, 427, 28822, 826, 31698, 799, 28568, 89821, 568, 581, 591, 649, 233, 748, 72546, 97874, 44620,
                  499, 948, 173,
                  47881, 504, 59212, 340, 488, 12428, 356, 27, 58117, 78274, 246, 45865, 55707, 234, 618, 881, 88804,
                  433, 759, 269, 642,
                  861, 278, 70230, 488, 542, 41486, 892, 49310, 33853, 466, 76157, 523, 552, 973, 928, 763, 55495,
                  48857, 802, 75611, 82,
                  144, 488, 15209, 39995, 933, 906, 31613, 698, 40650, 427, 577, 166, 64325, 59440, 633, 83499, 48044,
                  61117, 54664, 831,
                  43111, 54137, 659, 82, 76955, 447, 88250, 589, 831, 253, 337, 129, 732, 49701, 76587, 55521, 651, 644,
                  22123, 954, 81,
                  99899, 87952, 63975, 227, 16500, 934, 334, 584, 33, 987, 16186, 53332, 552, 715, 374, 771, 976, 563,
                  46077, 32947, 189,
                  40251, 413, 143, 939, 82041, 826, 65202, 227, 199, 288, 540, 648, 34708, 572, 45914, 359, 526, 330,
                  136, 137, 120,
                  63227, 23395, 555, 630, 262, 184, 77320, 209, 741, 70753, 63651, 821, 28024, 364, 361, 43818, 872,
                  951, 518, 46174,
                  101, 575, 86615, 264, 34879, 750, 410, 251, 12996, 250, 208, 540, 970, 13665, 7, 748, 16391, 138,
                  31897, 942, 743,
                  25732, 919, 884, 181, 895, 14, 40038, 774, 774, 750, 633, 63270, 855, 384, 23, 250, 85931, 70890,
                  91781, 414, 99279,
                  57255, 254, 90181, 150, 88139, 60989, 164, 26626, 422, 19, 409, 374, 88187, 39443, 611, 975, 936,
                  21711, 51759, 858,
                  65297, 76013, 181, 537, 80600, 813, 647, 615, 966, 908, 286, 75677, 25633, 257, 115, 96709, 618, 611,
                  965, 735, 25844,
                  8, 677, 934, 873, 265, 360, 564, 94187, 25727, 577, 510, 225, 97075, 88752, 84826, 91061, 73589, 435,
                  842, 355, 31300,
                  779, 97, 770, 910, 11228, 188, 14762, 247, 616, 151, 370, 36671, 393, 360, 749, 82500, 341, 835, 178,
                  652, 107, 5, 989,
                  298, 811, 481, 121, 80681, 772, 96586, 94807, 852, 563, 209, 10518, 792, 980, 41015, 539, 92323, 578,
                  988, 254, 968,
                  406, 931, 94195, 90, 379, 76156, 54857, 175, 954, 635, 47, 607, 830, 26871, 973, 87, 507, 89608, 987,
                  895, 26634,
                  31469, 224, 234, 648, 87, 923, 69295, 54928, 823, 10565, 563, 973, 168, 366, 493, 482, 69767, 859,
                  33296, 215, 333,
                  91727, 10094, 906, 296, 79002, 947, 4, 33630, 96584, 722, 27, 253, 34376, 97511, 926, 90, 727, 54240,
                  741, 999, 188,
                  309, 295, 808, 415, 535, 674, 46302, 357, 297, 317, 74163, 366, 776, 333, 412, 588, 581, 57257, 712,
                  19964, 16531, 330,
                  467, 75915, 26956, 189, 459, 41761, 37632, 49848, 843, 49305, 96515, 241, 314, 38043, 621, 892, 774,
                  81927, 26167,
                  20740, 553, 122, 391, 255, 603, 46539, 59528, 37, 642, 876, 58473, 36460, 380, 28340, 574, 77976, 407,
                  397, 40677, 657,
                  154, 234, 24986, 590, 207, 201, 684, 101, 306, 95522, 935, 520, 67542, 234, 54283, 470, 716, 26667,
                  63402, 878, 182,
                  95, 808, 94238, 555, 259, 146, 401, 65, 717, 748, 231, 24745, 952, 22875, 534, 667, 359, 894, 97, 98,
                  952, 248, 94781,
                  570, 94604, 121, 76438, 169, 556, 966, 636, 11131, 22727, 156, 30, 688, 456, 234, 370, 68824, 977,
                  169, 903, 704,
                  97120, 684, 218, 23204, 128, 42039, 495, 816, 95907, 99131, 910, 982, 544, 97525, 849, 449, 379,
                  77421, 45515, 944,
                  50073, 317, 273, 75546, 831, 28466, 115, 76, 965, 78638, 161, 78581, 83114, 47241, 453, 239, 144,
                  80617, 327, 39454,
                  99695, 238, 263, 89922, 469, 452, 62585, 66020, 901, 52905, 32921, 908, 822, 55106, 85396, 33488, 198,
                  166, 244, 211,
                  49935, 581, 59830, 68728, 72583, 902, 693, 184, 615, 53500, 395, 454, 842, 484, 69654, 17176, 850,
                  61314, 714, 61456,
                  95236, 178, 904, 15, 17741, 753, 459, 44, 84607, 56649, 533, 12456, 353, 196, 60326, 328, 23240, 914,
                  516, 925, 725,
                  66064, 472]
print(Solution().minimizedMaximum2(59718, quantities))
